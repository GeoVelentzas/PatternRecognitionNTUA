%********** ΚΑΘΑΡΙΣΜΑ ΚΑΙ ΕΥΡΕΣΗ ΠΑΡΑΜΕΤΡΩΝ ΟΘΟΝΗΣ ΓΙΑ PLOTS ********************************************************
close all; clear all; clc;
scrsz = get(0,'ScreenSize');
%********************************************************************************************************************



%************** ΑΠΟΘΗΚΕΥΣΗ ΕΚΦΩΝΗΣΗΣ ΕΝΟΣ ΨΗΦΙΟΥ ********************************************************************
%**********ΠΡΟΕΠΕΞΕΡΓΑΣΙΑ ΚΑΙ ΥΠΟΟΓΙΣΜΟΣ ΒΑΣΙΚΩΝ ΠΑΡΑΜΕΤΡΩΝ**********************************************************
[x,Fs] = wavread('eight1.wav'); 
x1 = filter([1  +0.97],[1 0],x);        %προεμφαση
Ts = 1/Fs;                              %υπολογισμος περιοδου δειγματοληψιας
l = length(x1);                         %μηκος δινυσματος
time = (l-1)*Ts;                        %συνολικος χρονος εκφωνησης
tt= (0:l-1)*Ts;                         %δημιουργια διανυσματος χρονου
t = 0.025;                              %χρονικο διαστημα παραθυρων (sec)
t_over = 0.010;                         %χρονικη επικαλυψη παραθυρων (sec)
t_step = t-t_over;                      %χρονικο βήμα απο παραθυρο σε παραθυρο
w = round(t/Ts)+1;                      %μεγεθος παραθύρου σε δείγματα
step = round(t_step/Ts);                %μεγεθος βηματος σε δειγματα
h = hamming(w);                         %δημιουργια hamming παραθυρου
%********************************************************************************************************************



% ******************* ΠΛΑΙΣΙΩΣΗ ΚΑΙ ΠΑΡΑΘΥΡΩΣΗ***********************************************************************
k=0;                                    %σε αυτο το σταδιο δημιουργειται
for i=1:step:l-w                        %ενας πινακας xs1 ο οποιος σε καθε
    k=k+1;                              %γραμμη περιεχει ενα χρονικο παραθυρο
    xs1(k,:)= h.*x1(i:i+w-1);           %πολλαπλασιασμένο με hamming
end                                     %To πληθος των παραθυρων αποθηκευεται
now = k;                                %στην now  (number of windows)
%********************************************************************************************************************



%**************** ΔΗΜΙΟΥΡΓΙΑ ΣΥΣΤΟΙΧΙΑΣ ΦΙΛΤΡΩΝ MEL *****************************************************************
max = 2595*(log10(1+Fs/1400));          %υπολογισμος μεγιστης συχνοτητας στο χωρο mel -> Fs/2 kHz στον γραμμικο χωρο
m = linspace(0,max,26);                 %υπολογισμος κεντρικων συχνοτητων mel (υπολογιζω 2 παραπανω γιατι η 0 και η Fs/2 θα φυγουν)
f = 700*(10.^(m/2595)-1);               %υπολογισμος κεντρικων συχνοτητων στον γραμμικο χωρο συχνοτητων
f_lin = f(2:25);                        %κρατημα μονο των 24 ισομοιρασμενων που δεν ξεπερνουν τα ορια (οχι την μηδενικη και την Fs/2)
spec = 2^nextpow2(w);                   %υπολογισμος του πληθους σημειων n για τον fft αργοτερα
f_spec = round(((spec/2)*f_lin)/(Fs/2));%υπολογισμος διανυσματος συχνοτητων στον χωρο fft n σημειων (αρα η μεση n/2)

H = melfilt(f_spec,spec);               %Με βαση ολα αυτα κατασκευασα μια συναρτηση melfilt που μου δημιουργει τα φιλτρα mel 
                                        %σωστα στον γραμμικο χωρο συχνοτητων και αντιστοιχίζοντας την συχνοτητα
                                        %Fs/2 στο n/2 σημειο, οπου n to πληθος των σημειων για κληση του fft ωστε
                                        %να γινει σωστα ο πολλαπλασιασμος (βλεπε και melfilt), καθε γραμμη του πίνακα είναι ένα απο τα 24 φίλτρα
%********************************************************************************************************************



%*************** EMΦΑΝΙΣΗ ΒΑΣΙΚΩΝ ΕΞΑΓΟΜΕΝΩΝ ΣΗΜΑΤΩΝ ****************************************************************
figure;
subplot(3,1,1); plot(tt,x);             %Εμφάνιση του αρχικού σήματος
title('original signal');
xlabel('time (sec)');
subplot(3,1,2); plot(tt,x1);            %Εμφάνιση του σήματος μετα απο προέμφαση
title('signal after being emphasized');
xlabel('time (sec)');                     
subplot(3,1,3);                                
hold on; box on;
ff = linspace(0,Fs/2,spec/2);           %Εμφάνιση της συστοιχίας φίλτρων και αντιστοίχηση
for i=1:length(f_spec);                 %σε πραγματικές τιμές συχνοτήτων δημιουρφώντας κατάλληλο
    plot(ff,H(i,1:spec/2));             %διανυσμα συχνοτητων ff
end
title('mel filters')
xlabel('Frequency (Hz)');
%********************************************************************************************************************                                



% ********** ΥΠΟΛΟΓΟΣΜΟΣ Ε,G,C ΚΑΙ FFT ΤΩΝ ΠΑΡΑΘΥΡΩΝ *****************************************************************

                                        %Εισάγοντας τον πίνακα παραθύρων xs1, τον πίνακα φίτρων mel Η, το πλήθος
[E XS1] = energy(xs1,H,spec,now);       %των σημειων του fft spec και τον αριθμό παραθύρων στον χρόνο now
                                        %υπολογιζω οτι χρειαζεται (βλεπε energy)
G = log10(E(:,:));                      %υπολογισμος Gi (σε κάθε γραμμη εχω 24 συντελεστες)
C = (dct(G(:,:)'))';                    %υπολογισμος DCT για κάθε γραμμη του G
C = C(:,1:13);                          %κράτημα μονο των 13 πρώτων συντελεστών DCT
                                        
                                        %Επίσης μετα απο κατασκευη συναρτησης dct_reconstruct
E_hat = dct_reconstruct(C,24,now);      %γινεται εκτιμιση των συντελεστων ενεργειας
                                        %δειτε dct_reconstruct
%********************************************************************************************************************                                        


                                        
%************ ΕΜΦΑΝΙΣΗ ΣΥΝΤΕΛΕΣΤΩΝ ΕΝΕΡΓΕΙΑΣ (Ερωτημα 1α-1β)*********************************************************
figure('Position',[350 100 scrsz(3)-700 scrsz(4)-200]); 
subplot(3,2,1); box on;
plot((E(20,:)));                        %Συντελεστες για 20ο παράθυρο
title('Energy coefficients - E_i_j')
legend('20th window')
subplot(3,2,2); box on;
plot((E(27,:)),'r');                    %Συντελεστές για 27ο παραθυρο
title('Energy coefficients - E_i_j')
legend('27th window')

subplot(3,2,3); box on
plot(log10(E(20,:)));                   %Καλυτερη απεικονιση με log
title('Energy coefficients - log_1_0(E_i_j)')
legend('20th window')
subplot(3,2,4); box on
plot(log10(E(27,:)),'r');
title('Energy coefficients - log_1_0(E_i_j)')
legend('27th window')

subplot(3,2,5); box on
plot(log10(E_hat(20,:)));               %Εμφανιση recontructed Ε_hat
title('Reconstructed Energy coefficients - log_1_0 (E_i_j)')
legend('20th window')
subplot(3,2,6); box on
plot(log10(E_hat(27,:)),'r');
title('Reconstructed Energy coefficients - log_1_0 (E_i_j)')
legend('27th window','30th window')
%********************************************************************************************************************


%% Υπολογισμος και εμφανιση φασματος στα ιδια plots με καποιους συντελεστες
% κανονικοποιησης για πιο ουσιωδη απεικονιση της ενεργειας ως περιβαλλουσα
figure;
subplot(2,1,1); hold on; box on;
plot(linspace(0,8000,spec/2),1.5*log10(abs(XS1(20,1:spec/2)))+0.5,'g');
plot(f_lin,log10(E_hat(20,:)));
title('20th window');
legend('Energy reconstruction','Power spectrum')
xlabel('Frequency (Hz)');
subplot(2,1,2); hold on; box on;
plot(linspace(0,8000,spec/2),1.5*log10(abs(XS1(27,1:spec/2))),'g');
plot(f_lin,log10(E_hat(27,:)));
title('27th window');
legend('Energy reconstruction','Power spectrum')
xlabel('Frequency (Hz)');

%% Εμφανιση των ενεργειων και του φασματος καθε παραθυρου συνολικα ως επιφανειες
figure('Position',[100 100 scrsz(3)-200 scrsz(4)-200]); 
subplot(1,2,1);
surf(1:now , linspace(0,8000,spec/2), log10(abs(XS1(:,1:spec/2)')));
axis square
view(60,15);
shading interp;
camlight; 
lighting gouraud;
xlabel('No of window')
ylabel('Frequency (Hz)');
zlabel('log_1_0 (abs(FFT))');
title('Συνολικο φασμα ανα χρονικο παραθυρο')

subplot(1,2,2);
surf(1:now ,f_lin ,(log10(E_hat(:,:)))');
axis square
view(60,15);
shading interp;
camlight; 
lighting gouraud;
xlabel('No of window')
ylabel('Frequency (Hz)');
zlabel('log_1_0 (Ε hat))');
title('Συντελεστες Ενέργειας')


%% Υπολογισμος του cepstrum σε καθε παραθυρο απο τον πινακα των ffts
CE = real(ifft(log(abs(XS1(:,:)'))))';      %σε καθε γραμμη το cepstrum του παραθυρου
l_c = size(CE,2);                           %μηκος του cepstrum
P = zeros(now,l_c/2);                       %αρχικοποιηση πινακα
P(:,1:13)=CE(:,1:13);                       %Κρατημα των 13 πρωτων συντελεστων
DP = fft(P(:,:)',512)';                     %fft για καθε cepstrum παραθυρου
DP2 = DP(:,1:256);                          %κρατημα του μισου πρωτου για εμφανιση

%% Εμφανιση cepstrum, mfcc energy και spectrum
figure;
subplot(2,1,1); hold on
plot(linspace(0,8000,spec/2),1.5*log10(abs(XS1(20,1:spec/2)))+0.5,'g');
plot(f_lin,log10(E_hat(20,:)));
plot(linspace(0,8000,256),4*log10(exp(real(DP2(20,:))))+3.5,'r');
legend('Spectrum','MFCC based','Cepstrum based')
subplot(2,1,2); hold on
plot(linspace(0,8000,spec/2),1.5*log10(abs(XS1(27,1:spec/2))),'g');
plot(f_lin,log10(E_hat(27,:)));
plot(linspace(0,8000,256),4*log10(exp(real(DP2(27,:))))+3.5,'r');
legend('Spectrum','MFCC based','Cepstrum based')

