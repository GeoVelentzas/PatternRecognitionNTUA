% In this script we make a model for the sign


%==========================================================================
NUMBER = DATA{sign};                                        %κραταω τις εκφωνησεις του ψηφιου sign
no_of_signs = size(NUMBER,2);                               %το συνολο των επαναληψεων για καθε νοημα
permutation = randperm(no_of_signs);                        %μπερδεμενοι αριθμοι απο το 1 εως τον αριθμο των επαναληψεων
percent_for_train=0.8;                                      %θα κρατησουμε το 80% για training
keep_for_train=ceil(percent_for_train * no_of_signs);       %πλήθος νοηματων για training

concat_data = [];                                           %αρχικοποίηση των δεδομέμων για mixgauss_init
for i=1:keep_for_train                                      %για το πλήθος των ομιλητών που θα κρατήσουμε
    concat_data = [concat_data [NUMBER{permutation(i)}]'];  %concatenated δεδομενα για τη mixgauss_init
    TRAIN_DATA{i} = [NUMBER{permutation(i)}]';              %πλεον δεκα τυχαιοι ομιλητες στα cells του TRAIN_DATA
end                                                         %τέλος

for i = 1:no_of_signs-keep_for_train
    TEST_DATA{i} = [NUMBER{permutation(keep_for_train+i)}]'; %τα υπολοιπα για τεστ
end
%==========================================================================




%============================== case 1 ====================================
[mu0, Sigma0, weights0] = mixgauss_init(NOS*NOG, concat_data, 'diag','kmeans');

Sigma0 = reshape(Sigma0, [size(Sigma0,1) size(Sigma0,2) NOS NOG]);
mu0 = reshape(mu0, [size(mu0,1) NOS NOG]);
mixmat0 = reshape(weights0, [NOS NOG]);
mixmat0 = normalise(mixmat0,2);

% T = diag(ones(NOS,1)/2,0)+diag(ones(NOS-1,1)/2,1);
% P=zeros(1,NOS); P(1)=1; 
% %T(end,1)=0.5;  %εναλλακτικα να μπορει να επιστρεφει στην 1η κατασταση

T = ones(NOS,NOS)/NOS;
P = zeros(1,NOS); P(1) = 1;
%==========================================================================



%==========================================================================
[LL, prior, transmat, mu, Sigma, mixmat] = ...
     mhmm_em(TRAIN_DATA, P, T, mu0, Sigma0, mixmat0,'max_iter',Niter);

 if LL(end)==-Inf %Για να αποφυγω το προβλημα της assert
     MODEL;
 end
 
 LLL{sign} = LL;
 PRIOR{sign} = prior;
 TRANSMAT{sign} = transmat;
 MU{sign} = mu;
 SIGMA{sign} = Sigma;
 MIXMAT{sign} = mixmat;
 TEST{sign} = TEST_DATA;
 %=========================================================================

  